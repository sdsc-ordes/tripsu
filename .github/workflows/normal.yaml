# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
#
# This a demonstration pipeline which uses Nix in a container to drive the toolchain.
#
# - The Nix container (with cached toolchain) are quite big (~ 2Gb) and with no caching makes the
#   pull up to 2min at the start.
# - Without caching they result in ~500mb which is better but the toolchain needs to be installed
#   during the `nix develop` call.
#
# Remedies: Either to use own runners with proper image caching or do some Github trickery
# (not sure if they work), use the action/cache to cache docker layers and in the next step use
# a step with `uses: docker://...` but then `run:` does not work, how stupid ...
# (need to write an own action in the repo, ðŸ’©)
#
name: Normal Pipeline

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      is_release:
        required: true
        type: boolean

jobs:
  format:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sdsc-ordes/rdf-protect:ci-nix-1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          just nix-develop ./tools/ci/setup-git.sh

      - name: Format
        run: |
          just nix-develop just format

  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sdsc-ordes/rdf-protect:ci-nix-1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          just nix-develop ./tools/ci/setup-git.sh

      - name: Lint
        run: |
          just nix-develop just lint

      - name: Lint Undefined-Behavior
        continue-on-error: true
        run: |
          just nix-develop just lint-ub

      - name: Allow to fail
        if: failure()
        run: echo "lint-up failed -> continue."

  build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sdsc-ordes/rdf-protect:ci-nix-1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          just nix-develop ./tools/ci/setup-git.sh

      - name: build
        run: |
          just nix-develop just build
      - name: tests
        run: |
          just nix-develop just test

  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sdsc-ordes/rdf-protect:ci-nix-1.0.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          just nix-develop ./tools/ci/setup-git.sh

      - name: Test
        run: |
          just nix-develop just test

  package:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sdsc-ordes/rdf-protect:ci-nix-1.0.0

    if: ${{ ! inputs.is_release }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          just nix-develop ./tools/ci/setup-git.sh

      - name: Build derivation with nix
        run: |
          just nix-develop just nix-package

  deploy:
    runs-on: ubuntu-latest
    # needs: [format, lint, build, test]
    container:
      image: ghcr.io/sdsc-ordes/rdf-protect:ci-nix-1.0.0

    if: ${{ inputs.is_release }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          just nix-develop ./tools/ci/setup-git.sh

      - name: Create version tag (if release)
        run: |
          just nix-develop ./tools/ci/assert-tag.sh "$GITHUB_REF"

      - name: Build container image (nix)
        run: |
          just nix-develop just nix-image

      - name: Push image (if release)
        run: |
          just nix-develop tools/ci/upload-image.sh

      - name: Push tag (if release)
        run: |
          just nix-develop ./tools/ci/assert-tag.sh --push "$GITHUB_REF"
