# This is a docker image containing docker and a Nix store.
# This enables to either run Docker images inside this one,
# or use `nix develop` to start a sandboxed environment to
# do other non-docker related stuff.

FROM alpine:latest as base-podman
LABEL org.opencontainers.image.source https://github.com/sdsc-ordes/rdf-protect
LABEL org.opencontainers.image.description "CI container image for rdf-protect"
LABEL org.opencontainers.image.license "Apache"

RUN apk add findutils coreutils git jq curl bash just parallel podman

# Nix Image
# ===============================================
FROM base-podman as ci-nix
ARG USER_NAME=ci
ARG USER_UID=1000
ARG USER_GID=1000
ARG CACHE_TOOLCHAIN=false
ARG USER_HOME="/github/home"

RUN [ "TARGETPLATFORM" = "linux/amd64" ] || echo "Platform not yet supported."
COPY ./tools /container-setup/tools

# Install Nix and pre-cache the env.
RUN bash -c ". /container-setup/tools/general.sh && ci_setup_nix"

# Create user (does not work because action/checkout uses `root` in its own container ... ðŸ’©)
# Leave this code here for a reference:
# RUN mkdir -p "$USER_HOME" && \
#     adduser "$USER_NAME" -s /bin/zsh -D -u "$USER_UID" -g "$USER_GID" -h "$USER_HOME/$USER_NAME" && \
#     mkdir -p /etc/sudoers.d && \
#     echo "$USER_NAME ALL=(root) NOPASSWD:ALL" > "/etc/sudoers.d/$USER_NAME" && \
#     chmod 0440 "/etc/sudoers.d/$USER_NAME" && \
#     chown -R "$USER_NAME:$USER_NAME" /home /container-setup
# USER "$USER_NAME"

COPY rust-toolchain.toml /container-setup/
RUN [ "${CACHE_TOOLCHAIN}" = "false" ] || { cd /container-setup && \
    git init && git add . && \
    nix --accept-flake-config \
    build --no-link "./tools/nix#devShells.x86_64-linux.ci" && \
    nix store optimise; }


# Format image.
# ===============================================
FROM ci-nix as ci-format

# Lint image.
# ===============================================
FROM ci-nix as ci-lint

# Build image.
# ===============================================
FROM ci-nix as ci-build

# Test image.
# ===============================================
FROM ci-nix as ci-test

# Package image.
# ===============================================
FROM ci-nix as ci-package

# Deploy image.
# ===============================================
FROM ci-nix as ci-deploy
